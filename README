NAME
    Perl::Critic::ProfileCompiler - Generate canonical perlcritic.rc files
    from reduced configuration

VERSION
    version 0.001000

DESCRIPTION
    Perl::Critic default behaviour is to simply assume if you want a given
    policy, that you would have installed it already, and that if that
    policy is installed, then it assumes you want it.

    Perl::Critic also currently has a limitation, that if you want to
    exclude several policies, that can be messy.

    There are ways around both these issues, but they're rather messy.

    There's no clear way to say:

        - I want everything provided by Perl::Critic::Pulp
        - Except this policy here and this here
        - I also want everything provided by Perl::Critic::Swift
        - Except this policy here and this here

    This module exists to work around this problem by allowing you to define
    short-hand configuration files, that can consume bundles of policies,
    which can be expanded and augmented into a strict and comprehensive
    canonical Perl::Critic "perlcritic.rc" file, comparable to "perlcritic
    --profile-proto"'s output, but adjusted to explicitly communicate your
    requirements.

    This module also aims to make it easier for "CPAN" authors to share and
    distribute Perl::Critic profile configurations via "CPAN", so that such
    profiles can be shared between distributions with minor adjustments
    instead of each and every distribution needing to hand-copy and augment
    the "perlcritic.rc" file.

BUNDLES
    It is intended that "CPAN" authors who use this toolkit make bundles in
    one of the following forms.

    The rationale behind the naming schemes are articulated in my
    "Dist::Zilla" Author Bundle

  Perl::Critic Distribution Centric Bundles
    These are intended to mimic other "CPAN" distribution names.

    For instance, a bundle that provides all the contents of
    Perl::Critic::Pulp would be included in a bundle:

        Perl::Critic::ProfileCompiler::Bundle::Pulp

    And added via:

        [@Pulp]

  Perl::Critic Thematic Bundles
    These are intended as logical replacements for "Perl::Critic" Policy
    themes.

        Perl::Critic::ProfileCompiler::Bundle::Theme::core

    This would be a logical substitute for the policy theme

        core

    And added via:

        [@Theme::core]

  Organisational Authority Centric Bundles
    These are intended for organisations, such as workplaces and non-profit
    organisations, such as P5P itself.

    The goal being that those organisations can provide recommended standard
    critic policy sets independent of Perl::Critic's release cycle.

    For instance, P5P could provide and regulate their own bundle as
    follows:

        Perl::Critic::ProfileCompiler::Bundle::Org::P5P

    Mozilla could do this:

        Perl::Critic::ProfileCompiler::Bundle::Org::Mozilla

    Enlightened Perl Organisation could do this:

        Perl::Critic::ProfileCompiler::Bundle::Org::EPO

    And they'd be includable as:

        [@Org::P5P]
        [@Org::Mozilla]
        [@Org::EPO]

    Respectively.

  Author Authority Centric Bundles
    These are intended for individual "CPAN" authors who just have a way of
    doing things that they want to use in several places.

    I for instance, will eventually be creating:

        Perl::Critic::ProfileCompiler::Bundle::Author::KENTNL

    Which will be available as

        [@Author::KENTNL]

CONFIGURATION AND EXECUTION
    To utilise the profile compiler, a first step is creating a
    "perlcritic-meta.rc" file.

    This contains the specification for the canonical configuration you wish
    to use.

    A tool will eventually arise to read and process this file, and emit a
    "perlcritic.rc" file that represents the canonical configuration
    specified.

        perlcritic-pc ./perlcritic-meta.rc -o perlcritic.rc

    I shall endeavour to also eventually have a Dist::Zilla plugin that
    translates one into the other during "build" phase, for authors who wish
    to truely keep their source tree free of the canonicalised form.

AUTHOR
    Kent Fredric <kentfredric@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Kent Fredric
    <kentfredric@gmail.com>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

